*markdown-composer.txt*  Instant previews

Author:     Andy Russell <arussell123@gmail.com>
License:    MIT

==============================================================================

INTRODUCTION                            *markdown-composer*

While editing markdown, this plugin will open a browser containing a preview
of the HTML generated by your markdown. The preview is edited in real time as
you edit the buffer in Vim.

OPTIONS                                 *markdown-composer-options*

g:markdown_composer_browser             *g:markdown_composer_browser*
            String. Specifies a specific browser for the plugin to use when
            opening the markdown preview. The provided string will be parsed
            as shell words and then invoked as a command and arguments.
            The preview URI will be passed as the final argument.

            Default: unset. The plugin will try to determine the default
            browser using a platform-specific mechanism.

g:markdown_composer_open_browser        *g:markdown_composer_open_browser*
            If set to 0, the plugin will not attempt to open the user's
            browser, instead requiring them to open it manually.

            Default: 1

g:markdown_composer_external_renderer   *g:markdown_composer_external_renderer*
            An external command that should be run by the server to render
            markdown. The command should read markdown from stdin and output
            HTML on stdout. For example, to use pandoc, one might set: >

    let g:markdown_composer_external_renderer='pandoc -f markdown -t html'
<
            The command must use UTF-8 encoding on both stdin and stdout.

            Since rendering markdown externally is slower, if this option is
            set, then `g:markdown_composer_refresh_rate` will default to a
            higher rate. If this is undesired, you may set the refresh rate
            manually. You might want to set the refresh rate higher or lower
            depending on the size of the markdown documents that you usually
            edit.

            Not set by default.

g:markdown_composer_refresh_rate        *g:markdown_composer_refresh_rate*

            The rate in milliseconds that new markdown should be sent from the
            buffer to the server. If set to 0, markdown will be sent on every
            keystroke.

            Default: 0 (unless `g:markdown_composer_external_renderer` is
                     set, in which case the default is 500)

g:markdown_composer_syntax_theme        *g:markdown_composer_syntax_theme*
            The theme that the preview should use for syntax highlighting. All
            themes from highlight.js are supported. A demo can be found at
            https://highlightjs.org/static/demo/.

            The variable should be the name of the theme's stylesheet (without
            .css). The stylesheets may be found at

            https://github.com/isagalaev/highlight.js/tree/master/src/styles

            Default: github

g:markdown_composer_autostart           *g:markdown_composer_autostart*
            Whether the server should automatically start when a markdown
            file is opened.

            Default: 1

g:markdown_composer_custom_css          *g:markdown_composer_custom_css*
            A list of custom CSS URIs that should be loaded instead of the
            GitHub styles.

            You may provide local paths and URLs, but they must be absolute
            and prefixed with a scheme ('file:///home/euclio/markdown.css')

            Default: []

g:markdown_composer_address          *g:markdown_composer_address*
            The address which the server will listen on.

            Default: localhost

g:markdown_composer_port          *g:markdown_composer_port*
            The port number which the server will listen on.

            Default: 0 (ephemeral)

COMMANDS                                *markdown-composer-commands*

The plugin should start automatically whenever you open a markdown buffer.
However, some commands are provided should you like operate the plugin
manually.

                                        *markdown-composer-:ComposerStart*
:ComposerStart              Start the preview server.

                                        *markdown-composer-:ComposerUpdate*
:ComposerUpdate             Send the current buffer to the preview server.

:ComposerOpen                           *markdown-composer-:ComposerOpen*
                            Opens a new browser window containing the
                            markdown preview.

                                        *markdown-composer-:ComposerJob*
:ComposerJob               Echoes the channel that the plugin is listening on.

ABOUT                                   *markdown-composer-about*

Please report all bugs and feature requests on GitHub here:

    https://github.com/euclio/vim-markdown-composer

  vim:tw=78:et:ft=help:norl:
